{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\munta\\\\Desktop\\\\easydelivery\\\\frontend\\\\src\\\\pages\\\\Reviews.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reviews = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const response = await fetch(`http://localhost:5002/api/reviews/user/${userId}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch reviews');\n        }\n        const data = await response.json();\n        setReviews(data);\n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [userId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reviews...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (reviews.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No reviews found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-3xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"User Reviews\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border p-4 rounded mb-4 shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold\",\n        children: review.reviewer.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Rating: \", review.rating, \" / 5\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: review.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: new Date(review.createdAt).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, review._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Reviews, \"BgEHAA2Rgln+hDpCCdy5K57D2ds=\", false, function () {\n  return [useParams];\n});\n_c = Reviews;\nexport default Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Reviews","_s","userId","reviews","setReviews","loading","setLoading","fetchReviews","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","review","reviewer","name","rating","comment","Date","createdAt","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/munta/Desktop/easydelivery/frontend/src/pages/Reviews.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Reviews = () => {\r\n  const { userId } = useParams();\r\n  const [reviews, setReviews] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5002/api/reviews/user/${userId}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch reviews');\r\n        }\r\n        const data = await response.json();\r\n        setReviews(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchReviews();\r\n  }, [userId]);\r\n\r\n  if (loading) {\r\n    return <p>Loading reviews...</p>;\r\n  }\r\n\r\n  if (reviews.length === 0) {\r\n    return <p>No reviews found.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-3xl mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-bold mb-4\">User Reviews</h2>\r\n      {reviews.map((review) => (\r\n        <div key={review._id} className=\"border p-4 rounded mb-4 shadow\">\r\n          <p className=\"font-semibold\">{review.reviewer.name}</p>\r\n          <p>Rating: {review.rating} / 5</p>\r\n          <p>{review.comment}</p>\r\n          <p className=\"text-sm text-gray-500\">{new Date(review.createdAt).toLocaleDateString()}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}